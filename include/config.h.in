#ifndef CONFIG_H_

#define CONFIG_H_

/* config.h is generated from config.h.in, do not change it with hands */
#define NSS_CUSTOM_VERSION_MAJOR ${${PROJECT_NAME}_VERSION_MAJOR}
#define NSS_CUSTOM_VERSION_MINOR ${${PROJECT_NAME}_VERSION_MINOR}
#define NSS_CUSTOM_VERSION ${${PROJECT_NAME}_VERSION}

#define PREFIX_DEFINED(func) _ ## ${PROJECT_NAME} ## _ ## func
#define DECLARE_ENT_FUNCTIONS(TS, TYPE) \
    extern nss_set ## TS ## ent PREFIX_DEFINED(set ## TS ## ent); \
    extern nss_end ## TS ## ent PREFIX_DEFINED(end ## TS ## ent); \
    extern nss_get ## TS ## ent_r PREFIX_DEFINED(get ## TS ## ent_r)

DECLARE_ENT_FUNCTIONS(pw, struct passwd);
DECLARE_ENT_FUNCTIONS(sp, struct spwd);
DECLARE_ENT_FUNCTIONS(gr, struct group);

#define NSS_CUSTOM_CONF_FILE "${CONF_FILE}"
#define CONF_FILE_MAX_LINE_LEN 1024

#cmakedefine USE_SYSLOG 1
#cmakedefine USE_DEBUG 1
#ifndef STR
# define STR(X) _STR(X)
# define _STR(X) #X
#endif

#ifdef USE_SYSLOG
# include <syslog.h>
# ifdef USE_DEBUG
#  define PDBG(PRI, FMT, ...) syslog((PRI), __FILE__ ":" STR(__LINE__) ": " FMT , ##  __VA_ARGS__)
# else
#  define PDBG(PRI, FMT, ...) do { \
    if ((PRI) < LOG_INFO) \
        syslog((PRI), __FILE__ ":" STR(__LINE__) ": " FMT , ##  __VA_ARGS__); \
} while(0)
# endif
#else
# define PDBG(...) do{}while(0)
#endif



#endif /* CONFIG_H_ */

